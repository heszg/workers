buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://repo.spongepowered.org/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '6.+', changing: true
        classpath group: 'org.spongepowered', name: 'mixingradle', version: '0.7-SNAPSHOT'
    }
}

plugins {
    id "com.matthewprenger.cursegradle" version "1.4.0"
    id "com.github.johnrengelman.shadow" version "7.1.0"
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'idea'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'org.spongepowered.mixin'

idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

mixin{
    add sourceSets.main, 'mixins.workers.refmap.json'
    config 'mixins.workers.json'

    disableTargetValidator = true
    overwriteErrorLevel = 'error'
}

version = '1.7.0'

group = 'com.talhanation.workers' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'workers-1.20.1'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

//println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
minecraft {
    mappings channel: 'official', version: '1.20.1'
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            //arg "-mixin.config=recruits.general.mixin.json"//////////////////////////

            args = ['--username', 'talhanation' ]

            mods {
                'workers' {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            //arg "-mixin.config=recruits.general.mixin.json"//////////////////////////

            mods {
                'workers' {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'workers', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
            mods {
                'workers' {
                    source sourceSets.main
                }
            }
        }
    }
}

repositories {
    maven {
        name = "henkelmax.public"
        url = 'https://maven.maxhenkel.de/repository/public'
    }
    mavenLocal()
}

repositories {
    maven {
        url "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
}

sourceSets.main.resources {
    srcDir 'src/generated/resources'
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.20.1-47.1.0'
    shadow fg.deobf("de.maxhenkel.corelib:corelib:1.20.1-1.0.0:api")
    runtimeOnly fg.deobf("de.maxhenkel.corelib:corelib:1.20.1-1.0.0")
    runtimeOnly fg.deobf("de.maxhenkel.corelib:corelib:1.20.1-1.0.0:javadoc")
    //implementation fg.deobf("curse.maven:worldedit-225608:3922622")
    implementation fg.deobf('curse.maven:smallships-450659:4645815')

    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
}


artifacts {
    archives shadowJar
}

jar.finalizedBy('reobfJar')

shadowJar {
    project.configurations.shadow.setTransitive(true);
    configurations = [project.configurations.shadow]
    //classifier = ""
    relocate 'de.maxhenkel.corelib', "de.maxhenkel.workers.corelib"
}

reobf {
    shadowJar {}
}